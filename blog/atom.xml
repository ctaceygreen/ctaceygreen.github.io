<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ctaceygreen.github.io/blog</id>
    <title>Less Intimidating Blog</title>
    <updated>2023-04-30T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ctaceygreen.github.io/blog"/>
    <subtitle>Less Intimidating Blog</subtitle>
    <icon>https://ctaceygreen.github.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Paved Paths Series - Part 2 - A One Pager]]></title>
        <id>https://ctaceygreen.github.io/blog/paved-paths-series-part-2-a-one-pager</id>
        <link href="https://ctaceygreen.github.io/blog/paved-paths-series-part-2-a-one-pager"/>
        <updated>2023-04-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Part 2 of the series - Your one-pager to demonstrate the value of paved paths]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" alt="title image reading &amp;quot;Paved Paths: A one pager&amp;quot; with a hiking photo" src="/assets/images/title-image-75adf7258f49f9811b6d19bdc8bd0359.png" width="976" height="391" class="img_ev3q"></p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>Paved Path Series</div><div class="admonitionContent_S0QG"><p>This is Part 2 in a series of posts discussing Paved Paths between <a href="https://www.rickroche.com/" target="_blank" rel="noopener noreferrer">Rick</a> and I.</p><ul><li><a href="https://www.rickroche.com/2023/04/paved-paths-series-part-1-lets-talk-about-paved-paths" target="_blank" rel="noopener noreferrer">Part 1 - Paved Paths: Let's talk about paved paths</a></li><li>Part 3 - Paved Paths (In Development)</li></ul></div></div><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>Why just one page?</div><div class="admonitionContent_S0QG"><p>We both found ourselves needing to write a one-page summary of paved paths. This would most likely act as a landing page for someone to 'get the gist' of what these are. Low detail. Imagine the CxO of your company wants to know what these are.</p></div></div><h1>What is a paved path?</h1><p>A paved path ensures that a well-trodden route is an easy, quick and safe way of reaching a clearly defined destination.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="hiking">Hiking<a href="#hiking" class="hash-link" aria-label="Direct link to Hiking" title="Direct link to Hiking">​</a></h2><p>Imagine you're hiking through a woodland. Your destination is 'Chuck's Café', 4 miles away. You have a couple of options in this situation:</p><ol><li>Woodland map in hand, follow the predefined path to the café.</li><li>Knife in hand, head directly into the bush, confident you have the navigation and athletic abilities to reach the café.</li></ol><p><img loading="lazy" alt="image of a path through woodland with two possible routes" src="/assets/images/forest_path-4fb04f8e14427247f9d9dc5f0dc2bb97.png" width="606" height="416" class="img_ev3q"></p><p>Clearly, #2 is a much more adventurous decision to make. It may result in you learning new skills, or honing your existing ones. It could drive you to solve problems in new, innovative ways. However, it will most likely cause you to reach the café much later than if you'd followed the predefined path, dishevelled and missing your watch.</p><p>Option #1 is our paved path. It is predictable, safe, and fast. It will need walkers to make very few decisions(maybe a fork or two), will be smooth to traverse, and protects them from the risks of the deeper woodland (see: Bears). It is also unlikely to yield any opportunities for innovation.</p><p>This is the equivalent of our Engineers aiming for their destination of a 'REST API'. Nothing is stopping them from taking the untrodden path, where they will define patterns from scratch, and solve all of the problems along the way. It takes time though. It's also risky; there may well be challenges the team hadn't even considered when they started the journey, like securing their API against internal attackers. A paved path takes care of all of this for them, and much like a cookie-cutter, allows them to produce, in this example, APIs of consistent quality in a predictable amount of time.</p><h1>Does this turn us into a stale assembly line?</h1><p>No. But it could, if used incorrectly.</p><p>To succeed, we need exploitation <strong>and</strong> exploration. </p><p>If all of our teams only ever follow a fixed paved path, innovation dies. The path never evolves. The destination never changes. The technical value of the company will slowly diminish, until we wake up and realise none of our customer base owns a fax machine anymore.</p><p>At the other extreme, if every team is adventuring into the woodland when 80% of them are trying to reach the same destination, we're not exploiting enough. We're solving the same problems in different ways, over and over again, instead of focusing on innovating elsewhere.</p><p>So... we need both. We need paved paths, which serves the 80% across common use cases. We deliver consistently and with quality. The 20% are in the woodland, exploring new paths, new patterns, new technologies. These new paths may become forks on the paved path, as destinations evolve. If we ensure a balance between exploitation and exploration, paved paths massively empower our engineers and the organisation as a whole, without ever becoming stale.</p><p>Part 3 is in development, and will explore the Whats and Whys of paved paths.</p><p>Featured image background by <a href="https://unsplash.com/@austinban?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText" target="_blank" rel="noopener noreferrer">Austin Ban</a> on <a href="https://unsplash.com/photos/juHayWuaaoQ?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText" target="_blank" rel="noopener noreferrer">Unsplash</a>
Map image generated by <a href="https://www.craiyon.com/" target="_blank" rel="noopener noreferrer">Craiyon</a>, updated using <a href="https://github.com/excalidraw/excalidraw" target="_blank" rel="noopener noreferrer">excalidraw</a></p>]]></content>
        <author>
            <name>Chris Tacey-Green</name>
            <uri>https://github.com/ctaceygreen</uri>
        </author>
        <author>
            <name>Rick Roche</name>
            <uri>https://www.rickroche.com/</uri>
        </author>
        <category label="paved-path" term="paved-path"/>
        <category label="one-pager" term="one-pager"/>
        <category label="summary" term="summary"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Returning]]></title>
        <id>https://ctaceygreen.github.io/blog/returning</id>
        <link href="https://ctaceygreen.github.io/blog/returning"/>
        <updated>2023-04-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[So I disappeared from blogging for...a year and a half.]]></summary>
        <content type="html"><![CDATA[<p>So I disappeared from blogging for...a year and a half.</p><p>I apologise. I was focusing my energy on a very important deployment - my daughter! And if I'm honest, on balance, my daughter probably wins out in importance versus this blog.</p><p>But my daughter is now an incredibly cute, happy and genuinely funny 1 year old. I reckon we're at a point where I can find spare minutes in my day to get back into blogging. This isn't just a random thought though, I have plans! I'm currently working on a series of posts, alongside an epic human, on a topic I find extremely interesting. We also happen to believe it's vitally important given the direction the industry is heading.</p><p>So not only will I be back, but I'll be back with some regular posts! It's an Easter miracle.</p><p>OK, that's all. See you very soon...</p>]]></content>
        <author>
            <name>Chris Tacey-Green</name>
            <uri>https://github.com/ctaceygreen</uri>
        </author>
        <category label="returning" term="returning"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[How do I check the health of my Azure Consumption Functions when swapping Deployment Slots?]]></title>
        <id>https://ctaceygreen.github.io/blog/azure-consumption-functions-healthcheck-with-deployment-slots</id>
        <link href="https://ctaceygreen.github.io/blog/azure-consumption-functions-healthcheck-with-deployment-slots"/>
        <updated>2021-08-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Setting the scene]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-the-scene">Setting the scene<a href="#setting-the-scene" class="hash-link" aria-label="Direct link to Setting the scene" title="Direct link to Setting the scene">​</a></h2><p>Okay that title has quite a few elements to it, so let's break down exactly what we're trying to do here...</p><p>Our situation:</p><ul><li>An Azure Function running on a consumption plan</li><li><a href="https://docs.microsoft.com/en-us/azure/app-service/deploy-staging-slots" target="_blank" rel="noopener noreferrer">Deployment slots</a> configured within our IaC (a guide on these could be a separate post)</li><li>An ADO pipeline that deploys our IaC, code and then swaps our staging and production slot</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="so-whats-the-problem-here">So what's the problem here?<a href="#so-whats-the-problem-here" class="hash-link" aria-label="Direct link to So what's the problem here?" title="Direct link to So what's the problem here?">​</a></h2><p>Our problem is that with the current setup, swapping slots on a consumption Function assumes healthiness based on loading the root URL of your Function App. This may be suitable for simple Functions, but as soon as your Function has downstream dependencies (such as a reliance on a DB, queue or other API), our requirements become more complicated. Ideally, our deployment process would look something like :</p><ul><li>Deploy infrastructure</li><li>Deploy code to staging slot</li><li>Check downstream dependencies are correctly configured and accessible to staging slot</li><li>Swap staging and production slot</li></ul><p>Hopefully you can see now that our root URL is letting us down slightly.</p><p>This is where we can turn to health-checks. In many services (App Service, Kubernetes etc), zero-downtime deployments utilise health probes, which hit a predefined HTTP endpoint to determine that your app is ready and healthy. An experienced blogger and all-round smart guy named John Reilly has already created a similar post <a href="https://blog.johnnyreilly.com/2021/02/11/azure-app-service-health-checks-and-zero-downtime-deployments" target="_blank" rel="noopener noreferrer">here</a> to explain how we can achieve this for Azure App Service. This process can be followed if you're running your Functions on an App Service plan. If only this worked for consumption Functions too, my post would be completely unnecessary!
Unfortunately, it doesn't. The <code>healthcheckPath</code> used in App Service to facilitate this functionality is not supported on the consumption plan. Annoying, but we still have a solution!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-solution">The solution<a href="#the-solution" class="hash-link" aria-label="Direct link to The solution" title="Direct link to The solution">​</a></h2><p>There are some sneaky appsettings that we can set on our Function. These configure which endpoint is used during slot warmup to check your slot is healthy. The appsettings are as follows:</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token property">"appsettings"</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token property">"name"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"WEBSITE_WARMUP_PATH"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token property">"value"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"[parameters('healthcheckPath')]"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token property">"name"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"WEBSITE_SWAP_WARMUP_PING_PATH"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token property">"value"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"[parameters('healthcheckPath')]"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token property">"name"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"WEBSITE_SWAP_WARMUP_PING_STATUSES"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token property">"value"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"200"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><code>WEBSITE_WARMUP_PATH</code> - Used in a few different areas of Azure. The reason we need it is because we have authentication enabled across all endpoints of our Function. Unlike the healthcheckPath functionality of app-service, the Function slot warmup process does not run 'behind' the auth/ip restriction layer. Therefore, this appsetting specifies that the authentication layer should ignore this path and allow anonymous calls. This should be considered carefully with your use-case, ensuring that you're not opening yourself up to DOS attacks or returning sensitive information that can be used as a security hole.</li><li><code>WEBSITE_SWAP_WARMUP_PING_PATH</code> - The path to your healthcheck/ping endpoint on your Function. e.g. '/api/healthcheck'</li><li><code>WEBSITE_SWAP_WARMUP_PING_STATUSES</code> - The statuses that you will accept as a successful response from your healthcheck endpoint. Without this, Azure will consider some redirect status codes as successful responses, so in our example we're making this much more specific with just a '200' considered successful.</li></ul><p>After adding this into your ARM template for the Function <code>Microsoft.Web/Sites</code> and it's associated slot, you're good to go! The final step is to ensure that your ADO pipeline is running the task below to swap slots on your Function:</p><div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token key atrule">task</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> AzureAppServiceManager@0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">displayName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Swap Staging Slot with Production'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">inputs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">action</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Swap Slots'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">azureSubscription</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'$(azureSubscription)'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">resourceGroupName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $(resourceGroupName)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">webAppName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $(functionName)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">SourceSlot</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'stage'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Running this ADO pipeline step will now check your <code>WEBSITE_SWAP_WARMUP_PING_PATH</code> is returning the expected status before swapping your slot into production. This should greatly reduce the likelihood of a consumption Function being deployed to production with misconfigured dependencies (e.g. invalid connection-string). You could easily implement this pattern for any consumption Functions within your estate, even non-http-triggers, all you'd need to do is ensure that an associated healthcheck http-trigger Function was deployed alongside it.</p><p>That should do us for this one! If anything isn't clear, get in touch and I'd be happy to provide more reproducable examples of the entire ARM template and pipeline steps.</p><p>Until next time...</p>]]></content>
        <author>
            <name>Chris Tacey-Green</name>
            <uri>https://github.com/ctaceygreen</uri>
        </author>
        <category label="deployment-slots" term="deployment-slots"/>
        <category label="healthcheck" term="healthcheck"/>
        <category label="consumption" term="consumption"/>
        <category label="function" term="function"/>
        <category label="azure" term="azure"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Welcome]]></title>
        <id>https://ctaceygreen.github.io/blog/welcome</id>
        <link href="https://ctaceygreen.github.io/blog/welcome"/>
        <updated>2021-08-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I figured the first post couldn't be a heavy technical braindump. That would be rude.]]></summary>
        <content type="html"><![CDATA[<p>I figured the first post couldn't be a heavy technical braindump. That would be rude. </p><p>Instead, here's a much more bite-size and welcoming 'Welcome' post, to break the blog in.
Since I'm British, this is where I'd naturally talk about the weather to break the ice. So.. it's the middle of Summer in the UK, and therefore has been wet, windy and grey today.</p><p>Good.</p><p>With that out of the way, here's a quick summary of what topics to expect from the first bunch of posts:</p><ul><li>Approaching deployment in Azure Devops</li><li>Monitoring in Azure</li><li>Alerting in Azure</li><li>Logging in Azure (Functions and App Service)</li><li>Securing an application in Azure App Service</li><li>Azure integration technologies</li><li>Why services in Azure want to be event-driven</li><li>Building an event-driven solution in Azure</li><li>Things you'll need in your Azure Function code</li><li>Why templates are your friend</li><li>Integration in a Hybrid cloud model</li></ul><p>Very Azure-heavy, I realise. But those who have poked me to create this blog are hoping for some Azure guidance, so this is where I'll start my journey into blogging.</p><p>I better get writing my first post then...</p>]]></content>
        <author>
            <name>Chris Tacey-Green</name>
            <uri>https://github.com/ctaceygreen</uri>
        </author>
        <category label="welcome" term="welcome"/>
    </entry>
</feed>